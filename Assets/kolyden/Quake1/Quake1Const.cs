using UnityEngine;

namespace kolyden.Quake1
{
    public static class Quake1Const
    {
        public static readonly Color32[] Palette =
        {
            new Color32(0, 0, 0, 255), new Color32(15, 15, 15, 255), new Color32(31, 31, 31, 255), new Color32(47, 47, 47, 255),
            new Color32(63, 63, 63, 255), new Color32(75, 75, 75, 255), new Color32(91, 91, 91, 255), new Color32(107, 107, 107, 255),
            new Color32(123, 123, 123, 255), new Color32(139, 139, 139, 255), new Color32(155, 155, 155, 255), new Color32(171, 171, 171, 255),
            new Color32(187, 187, 187, 255), new Color32(203, 203, 203, 255), new Color32(219, 219, 219, 255), new Color32(235, 235, 235, 255),
            new Color32(15, 11, 7, 255), new Color32(23, 15, 11, 255), new Color32(31, 23, 11, 255), new Color32(39, 27, 15, 255),
            new Color32(47, 35, 19, 255), new Color32(55, 43, 23, 255), new Color32(63, 47, 23, 255), new Color32(75, 55, 27, 255),
            new Color32(83, 59, 27, 255), new Color32(91, 67, 31, 255), new Color32(99, 75, 31, 255), new Color32(107, 83, 31, 255),
            new Color32(115, 87, 31, 255), new Color32(123, 95, 35, 255), new Color32(131, 103, 35, 255), new Color32(143, 111, 35, 255),
            new Color32(11, 11, 15, 255), new Color32(19, 19, 27, 255), new Color32(27, 27, 39, 255), new Color32(39, 39, 51, 255),
            new Color32(47, 47, 63, 255), new Color32(55, 55, 75, 255), new Color32(63, 63, 87, 255), new Color32(71, 71, 103, 255),
            new Color32(79, 79, 115, 255), new Color32(91, 91, 127, 255), new Color32(99, 99, 139, 255), new Color32(107, 107, 151, 255),
            new Color32(115, 115, 163, 255), new Color32(123, 123, 175, 255), new Color32(131, 131, 187, 255), new Color32(139, 139, 203, 255),
            new Color32(0, 0, 0, 255), new Color32(7, 7, 0, 255), new Color32(11, 11, 0, 255), new Color32(19, 19, 0, 255),
            new Color32(27, 27, 0, 255), new Color32(35, 35, 0, 255), new Color32(43, 43, 7, 255), new Color32(47, 47, 7, 255),
            new Color32(55, 55, 7, 255), new Color32(63, 63, 7, 255), new Color32(71, 71, 7, 255), new Color32(75, 75, 11, 255),
            new Color32(83, 83, 11, 255), new Color32(91, 91, 11, 255), new Color32(99, 99, 11, 255), new Color32(107, 107, 15, 255),
            new Color32(7, 0, 0, 255), new Color32(15, 0, 0, 255), new Color32(23, 0, 0, 255), new Color32(31, 0, 0, 255),
            new Color32(39, 0, 0, 255), new Color32(47, 0, 0, 255), new Color32(55, 0, 0, 255), new Color32(63, 0, 0, 255),
            new Color32(71, 0, 0, 255), new Color32(79, 0, 0, 255), new Color32(87, 0, 0, 255), new Color32(95, 0, 0, 255),
            new Color32(103, 0, 0, 255), new Color32(111, 0, 0, 255), new Color32(119, 0, 0, 255), new Color32(127, 0, 0, 255),
            new Color32(19, 19, 0, 255), new Color32(27, 27, 0, 255), new Color32(35, 35, 0, 255), new Color32(47, 43, 0, 255),
            new Color32(55, 47, 0, 255), new Color32(67, 55, 0, 255), new Color32(75, 59, 7, 255), new Color32(87, 67, 7, 255),
            new Color32(95, 71, 7, 255), new Color32(107, 75, 11, 255), new Color32(119, 83, 15, 255), new Color32(131, 87, 19, 255),
            new Color32(139, 91, 19, 255), new Color32(151, 95, 27, 255), new Color32(163, 99, 31, 255), new Color32(175, 103, 35, 255),
            new Color32(35, 19, 7, 255), new Color32(47, 23, 11, 255), new Color32(59, 31, 15, 255), new Color32(75, 35, 19, 255),
            new Color32(87, 43, 23, 255), new Color32(99, 47, 31, 255), new Color32(115, 55, 35, 255), new Color32(127, 59, 43, 255),
            new Color32(143, 67, 51, 255), new Color32(159, 79, 51, 255), new Color32(175, 99, 47, 255), new Color32(191, 119, 47, 255),
            new Color32(207, 143, 43, 255), new Color32(223, 171, 39, 255), new Color32(239, 203, 31, 255), new Color32(255, 243, 27, 255),
            new Color32(11, 7, 0, 255), new Color32(27, 19, 0, 255), new Color32(43, 35, 15, 255), new Color32(55, 43, 19, 255),
            new Color32(71, 51, 27, 255), new Color32(83, 55, 35, 255), new Color32(99, 63, 43, 255), new Color32(111, 71, 51, 255),
            new Color32(127, 83, 63, 255), new Color32(139, 95, 71, 255), new Color32(155, 107, 83, 255), new Color32(167, 123, 95, 255),
            new Color32(183, 135, 107, 255), new Color32(195, 147, 123, 255), new Color32(211, 163, 139, 255), new Color32(227, 179, 151, 255),
            new Color32(171, 139, 163, 255), new Color32(159, 127, 151, 255), new Color32(147, 115, 135, 255), new Color32(139, 103, 123, 255),
            new Color32(127, 91, 111, 255), new Color32(119, 83, 99, 255), new Color32(107, 75, 87, 255), new Color32(95, 63, 75, 255),
            new Color32(87, 55, 67, 255), new Color32(75, 47, 55, 255), new Color32(67, 39, 47, 255), new Color32(55, 31, 35, 255),
            new Color32(43, 23, 27, 255), new Color32(35, 19, 19, 255), new Color32(23, 11, 11, 255), new Color32(15, 7, 7, 255),
            new Color32(187, 115, 159, 255), new Color32(175, 107, 143, 255), new Color32(163, 95, 131, 255), new Color32(151, 87, 119, 255),
            new Color32(139, 79, 107, 255), new Color32(127, 75, 95, 255), new Color32(115, 67, 83, 255), new Color32(107, 59, 75, 255),
            new Color32(95, 51, 63, 255), new Color32(83, 43, 55, 255), new Color32(71, 35, 43, 255), new Color32(59, 31, 35, 255),
            new Color32(47, 23, 27, 255), new Color32(35, 19, 19, 255), new Color32(23, 11, 11, 255), new Color32(15, 7, 7, 255),
            new Color32(219, 195, 187, 255), new Color32(203, 179, 167, 255), new Color32(191, 163, 155, 255), new Color32(175, 151, 139, 255),
            new Color32(163, 135, 123, 255), new Color32(151, 123, 111, 255), new Color32(135, 111, 95, 255), new Color32(123, 99, 83, 255),
            new Color32(107, 87, 71, 255), new Color32(95, 75, 59, 255), new Color32(83, 63, 51, 255), new Color32(67, 51, 39, 255),
            new Color32(55, 43, 31, 255), new Color32(39, 31, 23, 255), new Color32(27, 19, 15, 255), new Color32(15, 11, 7, 255),
            new Color32(111, 131, 123, 255), new Color32(103, 123, 111, 255), new Color32(95, 115, 103, 255), new Color32(87, 107, 95, 255),
            new Color32(79, 99, 87, 255), new Color32(71, 91, 79, 255), new Color32(63, 83, 71, 255), new Color32(55, 75, 63, 255),
            new Color32(47, 67, 55, 255), new Color32(43, 59, 47, 255), new Color32(35, 51, 39, 255), new Color32(31, 43, 31, 255),
            new Color32(23, 35, 23, 255), new Color32(15, 27, 19, 255), new Color32(11, 19, 11, 255), new Color32(7, 11, 7, 255),
            new Color32(255, 243, 27, 255), new Color32(239, 223, 23, 255), new Color32(219, 203, 19, 255), new Color32(203, 183, 15, 255),
            new Color32(187, 167, 15, 255), new Color32(171, 151, 11, 255), new Color32(155, 131, 7, 255), new Color32(139, 115, 7, 255),
            new Color32(123, 99, 7, 255), new Color32(107, 83, 0, 255), new Color32(91, 71, 0, 255), new Color32(75, 55, 0, 255),
            new Color32(59, 43, 0, 255), new Color32(43, 31, 0, 255), new Color32(27, 15, 0, 255), new Color32(11, 7, 0, 255),
            new Color32(0, 0, 255, 255), new Color32(11, 11, 239, 255), new Color32(19, 19, 223, 255), new Color32(27, 27, 207, 255),
            new Color32(35, 35, 191, 255), new Color32(43, 43, 175, 255), new Color32(47, 47, 159, 255), new Color32(47, 47, 143, 255),
            new Color32(47, 47, 127, 255), new Color32(47, 47, 111, 255), new Color32(47, 47, 95, 255), new Color32(43, 43, 79, 255),
            new Color32(35, 35, 63, 255), new Color32(27, 27, 47, 255), new Color32(19, 19, 31, 255), new Color32(11, 11, 15, 255),
            new Color32(43, 0, 0, 255), new Color32(59, 0, 0, 255), new Color32(75, 7, 0, 255), new Color32(95, 7, 0, 255),
            new Color32(111, 15, 0, 255), new Color32(127, 23, 7, 255), new Color32(147, 31, 7, 255), new Color32(163, 39, 11, 255),
            new Color32(183, 51, 15, 255), new Color32(195, 75, 27, 255), new Color32(207, 99, 43, 255), new Color32(219, 127, 59, 255),
            new Color32(227, 151, 79, 255), new Color32(231, 171, 95, 255), new Color32(239, 191, 119, 255), new Color32(247, 211, 139, 255),
            new Color32(167, 123, 59, 255), new Color32(183, 155, 55, 255), new Color32(199, 195, 55, 255), new Color32(231, 227, 87, 255),
            new Color32(127, 191, 255, 255), new Color32(171, 231, 255, 255), new Color32(215, 255, 255, 255), new Color32(103, 0, 0, 255),
            new Color32(139, 0, 0, 255), new Color32(179, 0, 0, 255), new Color32(215, 0, 0, 255), new Color32(255, 0, 0, 255),
            new Color32(255, 243, 147, 255), new Color32(255, 247, 199, 255), new Color32(255, 255, 255, 255), new Color32(159, 91, 83, 255),
        };

        public static readonly Vector3[] Normals =
        {
            new Vector3(-0.525731f, 0.000000f, 0.850651f),
            new Vector3(-0.442863f, 0.238856f, 0.864188f),
            new Vector3(-0.295242f, 0.000000f, 0.955423f),
            new Vector3(-0.309017f, 0.500000f, 0.809017f),
            new Vector3(-0.162460f, 0.262866f, 0.951056f),
            new Vector3(0.000000f, 0.000000f, 1.000000f),
            new Vector3(0.000000f, 0.850651f, 0.525731f),
            new Vector3(-0.147621f, 0.716567f, 0.681718f),
            new Vector3(0.147621f, 0.716567f, 0.681718f),
            new Vector3(0.000000f, 0.525731f, 0.850651f),
            new Vector3(0.309017f, 0.500000f, 0.809017f),
            new Vector3(0.525731f, 0.000000f, 0.850651f),
            new Vector3(0.295242f, 0.000000f, 0.955423f),
            new Vector3(0.442863f, 0.238856f, 0.864188f),
            new Vector3(0.162460f, 0.262866f, 0.951056f),
            new Vector3(-0.681718f, 0.147621f, 0.716567f),
            new Vector3(-0.809017f, 0.309017f, 0.500000f),
            new Vector3(-0.587785f, 0.425325f, 0.688191f),
            new Vector3(-0.850651f, 0.525731f, 0.000000f),
            new Vector3(-0.864188f, 0.442863f, 0.238856f),
            new Vector3(-0.716567f, 0.681718f, 0.147621f),
            new Vector3(-0.688191f, 0.587785f, 0.425325f),
            new Vector3(-0.500000f, 0.809017f, 0.309017f),
            new Vector3(-0.238856f, 0.864188f, 0.442863f),
            new Vector3(-0.425325f, 0.688191f, 0.587785f),
            new Vector3(-0.716567f, 0.681718f, -0.147621f),
            new Vector3(-0.500000f, 0.809017f, -0.309017f),
            new Vector3(-0.525731f, 0.850651f, 0.000000f),
            new Vector3(0.000000f, 0.850651f, -0.525731f),
            new Vector3(-0.238856f, 0.864188f, -0.442863f),
            new Vector3(0.000000f, 0.955423f, -0.295242f),
            new Vector3(-0.262866f, 0.951056f, -0.162460f),
            new Vector3(0.000000f, 1.000000f, 0.000000f),
            new Vector3(0.000000f, 0.955423f, 0.295242f),
            new Vector3(-0.262866f, 0.951056f, 0.162460f),
            new Vector3(0.238856f, 0.864188f, 0.442863f),
            new Vector3(0.262866f, 0.951056f, 0.162460f),
            new Vector3(0.500000f, 0.809017f, 0.309017f),
            new Vector3(0.238856f, 0.864188f, -0.442863f),
            new Vector3(0.262866f, 0.951056f, -0.162460f),
            new Vector3(0.500000f, 0.809017f, -0.309017f),
            new Vector3(0.850651f, 0.525731f, 0.000000f),
            new Vector3(0.716567f, 0.681718f, 0.147621f),
            new Vector3(0.716567f, 0.681718f, -0.147621f),
            new Vector3(0.525731f, 0.850651f, 0.000000f),
            new Vector3(0.425325f, 0.688191f, 0.587785f),
            new Vector3(0.864188f, 0.442863f, 0.238856f),
            new Vector3(0.688191f, 0.587785f, 0.425325f),
            new Vector3(0.809017f, 0.309017f, 0.500000f),
            new Vector3(0.681718f, 0.147621f, 0.716567f),
            new Vector3(0.587785f, 0.425325f, 0.688191f),
            new Vector3(0.955423f, 0.295242f, 0.000000f),
            new Vector3(1.000000f, 0.000000f, 0.000000f),
            new Vector3(0.951056f, 0.162460f, 0.262866f),
            new Vector3(0.850651f, -0.525731f, 0.000000f),
            new Vector3(0.955423f, -0.295242f, 0.000000f),
            new Vector3(0.864188f, -0.442863f, 0.238856f),
            new Vector3(0.951056f, -0.162460f, 0.262866f),
            new Vector3(0.809017f, -0.309017f, 0.500000f),
            new Vector3(0.681718f, -0.147621f, 0.716567f),
            new Vector3(0.850651f, 0.000000f, 0.525731f),
            new Vector3(0.864188f, 0.442863f, -0.238856f),
            new Vector3(0.809017f, 0.309017f, -0.500000f),
            new Vector3(0.951056f, 0.162460f, -0.262866f),
            new Vector3(0.525731f, 0.000000f, -0.850651f),
            new Vector3(0.681718f, 0.147621f, -0.716567f),
            new Vector3(0.681718f, -0.147621f, -0.716567f),
            new Vector3(0.850651f, 0.000000f, -0.525731f),
            new Vector3(0.809017f, -0.309017f, -0.500000f),
            new Vector3(0.864188f, -0.442863f, -0.238856f),
            new Vector3(0.951056f, -0.162460f, -0.262866f),
            new Vector3(0.147621f, 0.716567f, -0.681718f),
            new Vector3(0.309017f, 0.500000f, -0.809017f),
            new Vector3(0.425325f, 0.688191f, -0.587785f),
            new Vector3(0.442863f, 0.238856f, -0.864188f),
            new Vector3(0.587785f, 0.425325f, -0.688191f),
            new Vector3(0.688191f, 0.587785f, -0.425325f),
            new Vector3(-0.147621f, 0.716567f, -0.681718f),
            new Vector3(-0.309017f, 0.500000f, -0.809017f),
            new Vector3(0.000000f, 0.525731f, -0.850651f),
            new Vector3(-0.525731f, 0.000000f, -0.850651f),
            new Vector3(-0.442863f, 0.238856f, -0.864188f),
            new Vector3(-0.295242f, 0.000000f, -0.955423f),
            new Vector3(-0.162460f, 0.262866f, -0.951056f),
            new Vector3(0.000000f, 0.000000f, -1.000000f),
            new Vector3(0.295242f, 0.000000f, -0.955423f),
            new Vector3(0.162460f, 0.262866f, -0.951056f),
            new Vector3(-0.442863f, -0.238856f, -0.864188f),
            new Vector3(-0.309017f, -0.500000f, -0.809017f),
            new Vector3(-0.162460f, -0.262866f, -0.951056f),
            new Vector3(0.000000f, -0.850651f, -0.525731f),
            new Vector3(-0.147621f, -0.716567f, -0.681718f),
            new Vector3(0.147621f, -0.716567f, -0.681718f),
            new Vector3(0.000000f, -0.525731f, -0.850651f),
            new Vector3(0.309017f, -0.500000f, -0.809017f),
            new Vector3(0.442863f, -0.238856f, -0.864188f),
            new Vector3(0.162460f, -0.262866f, -0.951056f),
            new Vector3(0.238856f, -0.864188f, -0.442863f),
            new Vector3(0.500000f, -0.809017f, -0.309017f),
            new Vector3(0.425325f, -0.688191f, -0.587785f),
            new Vector3(0.716567f, -0.681718f, -0.147621f),
            new Vector3(0.688191f, -0.587785f, -0.425325f),
            new Vector3(0.587785f, -0.425325f, -0.688191f),
            new Vector3(0.000000f, -0.955423f, -0.295242f),
            new Vector3(0.000000f, -1.000000f, 0.000000f),
            new Vector3(0.262866f, -0.951056f, -0.162460f),
            new Vector3(0.000000f, -0.850651f, 0.525731f),
            new Vector3(0.000000f, -0.955423f, 0.295242f),
            new Vector3(0.238856f, -0.864188f, 0.442863f),
            new Vector3(0.262866f, -0.951056f, 0.162460f),
            new Vector3(0.500000f, -0.809017f, 0.309017f),
            new Vector3(0.716567f, -0.681718f, 0.147621f),
            new Vector3(0.525731f, -0.850651f, 0.000000f),
            new Vector3(-0.238856f, -0.864188f, -0.442863f),
            new Vector3(-0.500000f, -0.809017f, -0.309017f),
            new Vector3(-0.262866f, -0.951056f, -0.162460f),
            new Vector3(-0.850651f, -0.525731f, 0.000000f),
            new Vector3(-0.716567f, -0.681718f, -0.147621f),
            new Vector3(-0.716567f, -0.681718f, 0.147621f),
            new Vector3(-0.525731f, -0.850651f, 0.000000f),
            new Vector3(-0.500000f, -0.809017f, 0.309017f),
            new Vector3(-0.238856f, -0.864188f, 0.442863f),
            new Vector3(-0.262866f, -0.951056f, 0.162460f),
            new Vector3(-0.864188f, -0.442863f, 0.238856f),
            new Vector3(-0.809017f, -0.309017f, 0.500000f),
            new Vector3(-0.688191f, -0.587785f, 0.425325f),
            new Vector3(-0.681718f, -0.147621f, 0.716567f),
            new Vector3(-0.442863f, -0.238856f, 0.864188f),
            new Vector3(-0.587785f, -0.425325f, 0.688191f),
            new Vector3(-0.309017f, -0.500000f, 0.809017f),
            new Vector3(-0.147621f, -0.716567f, 0.681718f),
            new Vector3(-0.425325f, -0.688191f, 0.587785f),
            new Vector3(-0.162460f, -0.262866f, 0.951056f),
            new Vector3(0.442863f, -0.238856f, 0.864188f),
            new Vector3(0.162460f, -0.262866f, 0.951056f),
            new Vector3(0.309017f, -0.500000f, 0.809017f),
            new Vector3(0.147621f, -0.716567f, 0.681718f),
            new Vector3(0.000000f, -0.525731f, 0.850651f),
            new Vector3(0.425325f, -0.688191f, 0.587785f),
            new Vector3(0.587785f, -0.425325f, 0.688191f),
            new Vector3(0.688191f, -0.587785f, 0.425325f),
            new Vector3(-0.955423f, 0.295242f, 0.000000f),
            new Vector3(-0.951056f, 0.162460f, 0.262866f),
            new Vector3(-1.000000f, 0.000000f, 0.000000f),
            new Vector3(-0.850651f, 0.000000f, 0.525731f),
            new Vector3(-0.955423f, -0.295242f, 0.000000f),
            new Vector3(-0.951056f, -0.162460f, 0.262866f),
            new Vector3(-0.864188f, 0.442863f, -0.238856f),
            new Vector3(-0.951056f, 0.162460f, -0.262866f),
            new Vector3(-0.809017f, 0.309017f, -0.500000f),
            new Vector3(-0.864188f, -0.442863f, -0.238856f),
            new Vector3(-0.951056f, -0.162460f, -0.262866f),
            new Vector3(-0.809017f, -0.309017f, -0.500000f),
            new Vector3(-0.681718f, 0.147621f, -0.716567f),
            new Vector3(-0.681718f, -0.147621f, -0.716567f),
            new Vector3(-0.850651f, 0.000000f, -0.525731f),
            new Vector3(-0.688191f, 0.587785f, -0.425325f),
            new Vector3(-0.587785f, 0.425325f, -0.688191f),
            new Vector3(-0.425325f, 0.688191f, -0.587785f),
            new Vector3(-0.425325f, -0.688191f, -0.587785f),
            new Vector3(-0.587785f, -0.425325f, -0.688191f),
            new Vector3(-0.688191f, -0.587785f, -0.425325f)
        };
    }
}